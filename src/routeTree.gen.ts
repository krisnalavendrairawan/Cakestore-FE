/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as LandingIndexImport } from './routes/landing/index'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authRegisterCustomerImport } from './routes/(auth)/register-customer'
import { Route as authOtpImport } from './routes/(auth)/otp'
import { Route as authLoginCustomerImport } from './routes/(auth)/login-customer'
import { Route as auth500Import } from './routes/(auth)/500'
import { Route as LandingCatalogIndexImport } from './routes/landing/catalog/index'
import { Route as AuthenticatedTransactionsProcessingOrdersIndexImport } from './routes/_authenticated/transactions/processing-orders/index'

// Create Virtual Routes

const errors503LazyImport = createFileRoute('/(errors)/503')()
const errors500LazyImport = createFileRoute('/(errors)/500')()
const errors404LazyImport = createFileRoute('/(errors)/404')()
const errors403LazyImport = createFileRoute('/(errors)/403')()
const errors401LazyImport = createFileRoute('/(errors)/401')()
const authSignUpLazyImport = createFileRoute('/(auth)/sign-up')()
const authProfileLazyImport = createFileRoute('/(auth)/profile')()
const authForgotPasswordLazyImport = createFileRoute(
  '/(auth)/forgot-password',
)()
const authChangePasswordLazyImport = createFileRoute(
  '/(auth)/change-password',
)()
const AuthenticatedSettingsRouteLazyImport = createFileRoute(
  '/_authenticated/settings',
)()
const LandingReviewsIndexLazyImport = createFileRoute('/landing/reviews/')()
const LandingCustomerOrdersIndexLazyImport = createFileRoute(
  '/landing/customer-orders/',
)()
const LandingCustomerChatsIndexLazyImport = createFileRoute(
  '/landing/customer-chats/',
)()
const AuthenticatedSettingsIndexLazyImport = createFileRoute(
  '/_authenticated/settings/',
)()
const AuthenticatedReviewsIndexLazyImport = createFileRoute(
  '/_authenticated/reviews/',
)()
const AuthenticatedProductsIndexLazyImport = createFileRoute(
  '/_authenticated/products/',
)()
const AuthenticatedHelpCenterIndexLazyImport = createFileRoute(
  '/_authenticated/help-center/',
)()
const AuthenticatedChatsIndexLazyImport = createFileRoute(
  '/_authenticated/chats/',
)()
const AuthenticatedCategoryIndexLazyImport = createFileRoute(
  '/_authenticated/category/',
)()
const LandingCustomerProfileLazyImport = createFileRoute(
  '/landing/customer/profile',
)()
const LandingCustomerOrdersOrderIdLazyImport = createFileRoute(
  '/landing/customer-orders/$orderId',
)()
const AuthenticatedUsersStaffLazyImport = createFileRoute(
  '/_authenticated/users/staff',
)()
const AuthenticatedUsersCustomerLazyImport = createFileRoute(
  '/_authenticated/users/customer',
)()
const AuthenticatedSettingsNotificationsLazyImport = createFileRoute(
  '/_authenticated/settings/notifications',
)()
const AuthenticatedSettingsDisplayLazyImport = createFileRoute(
  '/_authenticated/settings/display',
)()
const AuthenticatedSettingsAppearanceLazyImport = createFileRoute(
  '/_authenticated/settings/appearance',
)()
const AuthenticatedSettingsAccountLazyImport = createFileRoute(
  '/_authenticated/settings/account',
)()
const AuthenticatedProductsCreateLazyImport = createFileRoute(
  '/_authenticated/products/create',
)()
const AuthenticatedTransactionsOrdersIndexLazyImport = createFileRoute(
  '/_authenticated/transactions/orders/',
)()
const AuthenticatedTransactionsListPaymentIndexLazyImport = createFileRoute(
  '/_authenticated/transactions/list-payment/',
)()
const AuthenticatedTransactionsListOrderIndexLazyImport = createFileRoute(
  '/_authenticated/transactions/list-order/',
)()
const AuthenticatedProductsSlugEditLazyImport = createFileRoute(
  '/_authenticated/products/$slug/edit',
)()

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const LandingIndexRoute = LandingIndexImport.update({
  id: '/landing/',
  path: '/landing/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const errors503LazyRoute = errors503LazyImport
  .update({
    id: '/(errors)/503',
    path: '/503',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/503.lazy').then((d) => d.Route))

const errors500LazyRoute = errors500LazyImport
  .update({
    id: '/(errors)/500',
    path: '/500',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/500.lazy').then((d) => d.Route))

const errors404LazyRoute = errors404LazyImport
  .update({
    id: '/(errors)/404',
    path: '/404',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/404.lazy').then((d) => d.Route))

const errors403LazyRoute = errors403LazyImport
  .update({
    id: '/(errors)/403',
    path: '/403',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/403.lazy').then((d) => d.Route))

const errors401LazyRoute = errors401LazyImport
  .update({
    id: '/(errors)/401',
    path: '/401',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/401.lazy').then((d) => d.Route))

const authSignUpLazyRoute = authSignUpLazyImport
  .update({
    id: '/(auth)/sign-up',
    path: '/sign-up',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-up.lazy').then((d) => d.Route))

const authProfileLazyRoute = authProfileLazyImport
  .update({
    id: '/(auth)/profile',
    path: '/profile',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/profile.lazy').then((d) => d.Route))

const authForgotPasswordLazyRoute = authForgotPasswordLazyImport
  .update({
    id: '/(auth)/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/forgot-password.lazy').then((d) => d.Route),
  )

const authChangePasswordLazyRoute = authChangePasswordLazyImport
  .update({
    id: '/(auth)/change-password',
    path: '/change-password',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/change-password.lazy').then((d) => d.Route),
  )

const AuthenticatedSettingsRouteLazyRoute =
  AuthenticatedSettingsRouteLazyImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/route.lazy').then((d) => d.Route),
  )

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authRegisterCustomerRoute = authRegisterCustomerImport.update({
  id: '/(auth)/register-customer',
  path: '/register-customer',
  getParentRoute: () => rootRoute,
} as any)

const authOtpRoute = authOtpImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRoute,
} as any)

const authLoginCustomerRoute = authLoginCustomerImport.update({
  id: '/(auth)/login-customer',
  path: '/login-customer',
  getParentRoute: () => rootRoute,
} as any)

const auth500Route = auth500Import.update({
  id: '/(auth)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const LandingReviewsIndexLazyRoute = LandingReviewsIndexLazyImport.update({
  id: '/landing/reviews/',
  path: '/landing/reviews/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/landing/reviews/index.lazy').then((d) => d.Route),
)

const LandingCustomerOrdersIndexLazyRoute =
  LandingCustomerOrdersIndexLazyImport.update({
    id: '/landing/customer-orders/',
    path: '/landing/customer-orders/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/landing/customer-orders/index.lazy').then((d) => d.Route),
  )

const LandingCustomerChatsIndexLazyRoute =
  LandingCustomerChatsIndexLazyImport.update({
    id: '/landing/customer-chats/',
    path: '/landing/customer-chats/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/landing/customer-chats/index.lazy').then((d) => d.Route),
  )

const AuthenticatedSettingsIndexLazyRoute =
  AuthenticatedSettingsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/index.lazy').then((d) => d.Route),
  )

const AuthenticatedReviewsIndexLazyRoute =
  AuthenticatedReviewsIndexLazyImport.update({
    id: '/reviews/',
    path: '/reviews/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/reviews/index.lazy').then((d) => d.Route),
  )

const AuthenticatedProductsIndexLazyRoute =
  AuthenticatedProductsIndexLazyImport.update({
    id: '/products/',
    path: '/products/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/products/index.lazy').then((d) => d.Route),
  )

const AuthenticatedHelpCenterIndexLazyRoute =
  AuthenticatedHelpCenterIndexLazyImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/help-center/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedChatsIndexLazyRoute =
  AuthenticatedChatsIndexLazyImport.update({
    id: '/chats/',
    path: '/chats/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/chats/index.lazy').then((d) => d.Route),
  )

const AuthenticatedCategoryIndexLazyRoute =
  AuthenticatedCategoryIndexLazyImport.update({
    id: '/category/',
    path: '/category/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/category/index.lazy').then((d) => d.Route),
  )

const LandingCatalogIndexRoute = LandingCatalogIndexImport.update({
  id: '/landing/catalog/',
  path: '/landing/catalog/',
  getParentRoute: () => rootRoute,
} as any)

const LandingCustomerProfileLazyRoute = LandingCustomerProfileLazyImport.update(
  {
    id: '/landing/customer/profile',
    path: '/landing/customer/profile',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/landing/customer/profile.lazy').then((d) => d.Route),
)

const LandingCustomerOrdersOrderIdLazyRoute =
  LandingCustomerOrdersOrderIdLazyImport.update({
    id: '/landing/customer-orders/$orderId',
    path: '/landing/customer-orders/$orderId',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/landing/customer-orders/$orderId.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedUsersStaffLazyRoute =
  AuthenticatedUsersStaffLazyImport.update({
    id: '/users/staff',
    path: '/users/staff',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/users/staff.lazy').then((d) => d.Route),
  )

const AuthenticatedUsersCustomerLazyRoute =
  AuthenticatedUsersCustomerLazyImport.update({
    id: '/users/customer',
    path: '/users/customer',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/users/customer.lazy').then((d) => d.Route),
  )

const AuthenticatedSettingsNotificationsLazyRoute =
  AuthenticatedSettingsNotificationsLazyImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/notifications.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsDisplayLazyRoute =
  AuthenticatedSettingsDisplayLazyImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/display.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsAppearanceLazyRoute =
  AuthenticatedSettingsAppearanceLazyImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/appearance.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsAccountLazyRoute =
  AuthenticatedSettingsAccountLazyImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/account.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedProductsCreateLazyRoute =
  AuthenticatedProductsCreateLazyImport.update({
    id: '/products/create',
    path: '/products/create',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/products/create.lazy').then((d) => d.Route),
  )

const AuthenticatedTransactionsOrdersIndexLazyRoute =
  AuthenticatedTransactionsOrdersIndexLazyImport.update({
    id: '/transactions/orders/',
    path: '/transactions/orders/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/transactions/orders/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedTransactionsListPaymentIndexLazyRoute =
  AuthenticatedTransactionsListPaymentIndexLazyImport.update({
    id: '/transactions/list-payment/',
    path: '/transactions/list-payment/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/transactions/list-payment/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedTransactionsListOrderIndexLazyRoute =
  AuthenticatedTransactionsListOrderIndexLazyImport.update({
    id: '/transactions/list-order/',
    path: '/transactions/list-order/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/transactions/list-order/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedTransactionsProcessingOrdersIndexRoute =
  AuthenticatedTransactionsProcessingOrdersIndexImport.update({
    id: '/transactions/processing-orders/',
    path: '/transactions/processing-orders/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedProductsSlugEditLazyRoute =
  AuthenticatedProductsSlugEditLazyImport.update({
    id: '/products/$slug/edit',
    path: '/products/$slug/edit',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/products/$slug.edit.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/500': {
      id: '/(auth)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof auth500Import
      parentRoute: typeof rootRoute
    }
    '/(auth)/login-customer': {
      id: '/(auth)/login-customer'
      path: '/login-customer'
      fullPath: '/login-customer'
      preLoaderRoute: typeof authLoginCustomerImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/register-customer': {
      id: '/(auth)/register-customer'
      path: '/register-customer'
      fullPath: '/register-customer'
      preLoaderRoute: typeof authRegisterCustomerImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/change-password': {
      id: '/(auth)/change-password'
      path: '/change-password'
      fullPath: '/change-password'
      preLoaderRoute: typeof authChangePasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/profile': {
      id: '/(auth)/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof authProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpLazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503LazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/landing/': {
      id: '/landing/'
      path: '/landing'
      fullPath: '/landing'
      preLoaderRoute: typeof LandingIndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/products/create': {
      id: '/_authenticated/products/create'
      path: '/products/create'
      fullPath: '/products/create'
      preLoaderRoute: typeof AuthenticatedProductsCreateLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/display': {
      id: '/_authenticated/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AuthenticatedSettingsDisplayLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/users/customer': {
      id: '/_authenticated/users/customer'
      path: '/users/customer'
      fullPath: '/users/customer'
      preLoaderRoute: typeof AuthenticatedUsersCustomerLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/users/staff': {
      id: '/_authenticated/users/staff'
      path: '/users/staff'
      fullPath: '/users/staff'
      preLoaderRoute: typeof AuthenticatedUsersStaffLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/landing/customer-orders/$orderId': {
      id: '/landing/customer-orders/$orderId'
      path: '/landing/customer-orders/$orderId'
      fullPath: '/landing/customer-orders/$orderId'
      preLoaderRoute: typeof LandingCustomerOrdersOrderIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/landing/customer/profile': {
      id: '/landing/customer/profile'
      path: '/landing/customer/profile'
      fullPath: '/landing/customer/profile'
      preLoaderRoute: typeof LandingCustomerProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/landing/catalog/': {
      id: '/landing/catalog/'
      path: '/landing/catalog'
      fullPath: '/landing/catalog'
      preLoaderRoute: typeof LandingCatalogIndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/category/': {
      id: '/_authenticated/category/'
      path: '/category'
      fullPath: '/category'
      preLoaderRoute: typeof AuthenticatedCategoryIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/chats/': {
      id: '/_authenticated/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof AuthenticatedChatsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/products/': {
      id: '/_authenticated/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof AuthenticatedProductsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/reviews/': {
      id: '/_authenticated/reviews/'
      path: '/reviews'
      fullPath: '/reviews'
      preLoaderRoute: typeof AuthenticatedReviewsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/landing/customer-chats/': {
      id: '/landing/customer-chats/'
      path: '/landing/customer-chats'
      fullPath: '/landing/customer-chats'
      preLoaderRoute: typeof LandingCustomerChatsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/landing/customer-orders/': {
      id: '/landing/customer-orders/'
      path: '/landing/customer-orders'
      fullPath: '/landing/customer-orders'
      preLoaderRoute: typeof LandingCustomerOrdersIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/landing/reviews/': {
      id: '/landing/reviews/'
      path: '/landing/reviews'
      fullPath: '/landing/reviews'
      preLoaderRoute: typeof LandingReviewsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/products/$slug/edit': {
      id: '/_authenticated/products/$slug/edit'
      path: '/products/$slug/edit'
      fullPath: '/products/$slug/edit'
      preLoaderRoute: typeof AuthenticatedProductsSlugEditLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/transactions/processing-orders/': {
      id: '/_authenticated/transactions/processing-orders/'
      path: '/transactions/processing-orders'
      fullPath: '/transactions/processing-orders'
      preLoaderRoute: typeof AuthenticatedTransactionsProcessingOrdersIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/transactions/list-order/': {
      id: '/_authenticated/transactions/list-order/'
      path: '/transactions/list-order'
      fullPath: '/transactions/list-order'
      preLoaderRoute: typeof AuthenticatedTransactionsListOrderIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/transactions/list-payment/': {
      id: '/_authenticated/transactions/list-payment/'
      path: '/transactions/list-payment'
      fullPath: '/transactions/list-payment'
      preLoaderRoute: typeof AuthenticatedTransactionsListPaymentIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/transactions/orders/': {
      id: '/_authenticated/transactions/orders/'
      path: '/transactions/orders'
      fullPath: '/transactions/orders'
      preLoaderRoute: typeof AuthenticatedTransactionsOrdersIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedSettingsRouteLazyRouteChildren {
  AuthenticatedSettingsAccountLazyRoute: typeof AuthenticatedSettingsAccountLazyRoute
  AuthenticatedSettingsAppearanceLazyRoute: typeof AuthenticatedSettingsAppearanceLazyRoute
  AuthenticatedSettingsDisplayLazyRoute: typeof AuthenticatedSettingsDisplayLazyRoute
  AuthenticatedSettingsNotificationsLazyRoute: typeof AuthenticatedSettingsNotificationsLazyRoute
  AuthenticatedSettingsIndexLazyRoute: typeof AuthenticatedSettingsIndexLazyRoute
}

const AuthenticatedSettingsRouteLazyRouteChildren: AuthenticatedSettingsRouteLazyRouteChildren =
  {
    AuthenticatedSettingsAccountLazyRoute:
      AuthenticatedSettingsAccountLazyRoute,
    AuthenticatedSettingsAppearanceLazyRoute:
      AuthenticatedSettingsAppearanceLazyRoute,
    AuthenticatedSettingsDisplayLazyRoute:
      AuthenticatedSettingsDisplayLazyRoute,
    AuthenticatedSettingsNotificationsLazyRoute:
      AuthenticatedSettingsNotificationsLazyRoute,
    AuthenticatedSettingsIndexLazyRoute: AuthenticatedSettingsIndexLazyRoute,
  }

const AuthenticatedSettingsRouteLazyRouteWithChildren =
  AuthenticatedSettingsRouteLazyRoute._addFileChildren(
    AuthenticatedSettingsRouteLazyRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteLazyRoute: typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedProductsCreateLazyRoute: typeof AuthenticatedProductsCreateLazyRoute
  AuthenticatedUsersCustomerLazyRoute: typeof AuthenticatedUsersCustomerLazyRoute
  AuthenticatedUsersStaffLazyRoute: typeof AuthenticatedUsersStaffLazyRoute
  AuthenticatedCategoryIndexLazyRoute: typeof AuthenticatedCategoryIndexLazyRoute
  AuthenticatedChatsIndexLazyRoute: typeof AuthenticatedChatsIndexLazyRoute
  AuthenticatedHelpCenterIndexLazyRoute: typeof AuthenticatedHelpCenterIndexLazyRoute
  AuthenticatedProductsIndexLazyRoute: typeof AuthenticatedProductsIndexLazyRoute
  AuthenticatedReviewsIndexLazyRoute: typeof AuthenticatedReviewsIndexLazyRoute
  AuthenticatedProductsSlugEditLazyRoute: typeof AuthenticatedProductsSlugEditLazyRoute
  AuthenticatedTransactionsProcessingOrdersIndexRoute: typeof AuthenticatedTransactionsProcessingOrdersIndexRoute
  AuthenticatedTransactionsListOrderIndexLazyRoute: typeof AuthenticatedTransactionsListOrderIndexLazyRoute
  AuthenticatedTransactionsListPaymentIndexLazyRoute: typeof AuthenticatedTransactionsListPaymentIndexLazyRoute
  AuthenticatedTransactionsOrdersIndexLazyRoute: typeof AuthenticatedTransactionsOrdersIndexLazyRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteLazyRoute:
    AuthenticatedSettingsRouteLazyRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedProductsCreateLazyRoute: AuthenticatedProductsCreateLazyRoute,
  AuthenticatedUsersCustomerLazyRoute: AuthenticatedUsersCustomerLazyRoute,
  AuthenticatedUsersStaffLazyRoute: AuthenticatedUsersStaffLazyRoute,
  AuthenticatedCategoryIndexLazyRoute: AuthenticatedCategoryIndexLazyRoute,
  AuthenticatedChatsIndexLazyRoute: AuthenticatedChatsIndexLazyRoute,
  AuthenticatedHelpCenterIndexLazyRoute: AuthenticatedHelpCenterIndexLazyRoute,
  AuthenticatedProductsIndexLazyRoute: AuthenticatedProductsIndexLazyRoute,
  AuthenticatedReviewsIndexLazyRoute: AuthenticatedReviewsIndexLazyRoute,
  AuthenticatedProductsSlugEditLazyRoute:
    AuthenticatedProductsSlugEditLazyRoute,
  AuthenticatedTransactionsProcessingOrdersIndexRoute:
    AuthenticatedTransactionsProcessingOrdersIndexRoute,
  AuthenticatedTransactionsListOrderIndexLazyRoute:
    AuthenticatedTransactionsListOrderIndexLazyRoute,
  AuthenticatedTransactionsListPaymentIndexLazyRoute:
    AuthenticatedTransactionsListPaymentIndexLazyRoute,
  AuthenticatedTransactionsOrdersIndexLazyRoute:
    AuthenticatedTransactionsOrdersIndexLazyRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/500': typeof errors500LazyRoute
  '/login-customer': typeof authLoginCustomerRoute
  '/otp': typeof authOtpRoute
  '/register-customer': typeof authRegisterCustomerRoute
  '/sign-in': typeof authSignInRoute
  '/settings': typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  '/change-password': typeof authChangePasswordLazyRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/profile': typeof authProfileLazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/landing': typeof LandingIndexRoute
  '/products/create': typeof AuthenticatedProductsCreateLazyRoute
  '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/users/customer': typeof AuthenticatedUsersCustomerLazyRoute
  '/users/staff': typeof AuthenticatedUsersStaffLazyRoute
  '/landing/customer-orders/$orderId': typeof LandingCustomerOrdersOrderIdLazyRoute
  '/landing/customer/profile': typeof LandingCustomerProfileLazyRoute
  '/landing/catalog': typeof LandingCatalogIndexRoute
  '/category': typeof AuthenticatedCategoryIndexLazyRoute
  '/chats': typeof AuthenticatedChatsIndexLazyRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/products': typeof AuthenticatedProductsIndexLazyRoute
  '/reviews': typeof AuthenticatedReviewsIndexLazyRoute
  '/settings/': typeof AuthenticatedSettingsIndexLazyRoute
  '/landing/customer-chats': typeof LandingCustomerChatsIndexLazyRoute
  '/landing/customer-orders': typeof LandingCustomerOrdersIndexLazyRoute
  '/landing/reviews': typeof LandingReviewsIndexLazyRoute
  '/products/$slug/edit': typeof AuthenticatedProductsSlugEditLazyRoute
  '/transactions/processing-orders': typeof AuthenticatedTransactionsProcessingOrdersIndexRoute
  '/transactions/list-order': typeof AuthenticatedTransactionsListOrderIndexLazyRoute
  '/transactions/list-payment': typeof AuthenticatedTransactionsListPaymentIndexLazyRoute
  '/transactions/orders': typeof AuthenticatedTransactionsOrdersIndexLazyRoute
}

export interface FileRoutesByTo {
  '/500': typeof errors500LazyRoute
  '/login-customer': typeof authLoginCustomerRoute
  '/otp': typeof authOtpRoute
  '/register-customer': typeof authRegisterCustomerRoute
  '/sign-in': typeof authSignInRoute
  '/change-password': typeof authChangePasswordLazyRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/profile': typeof authProfileLazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/landing': typeof LandingIndexRoute
  '/products/create': typeof AuthenticatedProductsCreateLazyRoute
  '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/users/customer': typeof AuthenticatedUsersCustomerLazyRoute
  '/users/staff': typeof AuthenticatedUsersStaffLazyRoute
  '/landing/customer-orders/$orderId': typeof LandingCustomerOrdersOrderIdLazyRoute
  '/landing/customer/profile': typeof LandingCustomerProfileLazyRoute
  '/landing/catalog': typeof LandingCatalogIndexRoute
  '/category': typeof AuthenticatedCategoryIndexLazyRoute
  '/chats': typeof AuthenticatedChatsIndexLazyRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/products': typeof AuthenticatedProductsIndexLazyRoute
  '/reviews': typeof AuthenticatedReviewsIndexLazyRoute
  '/settings': typeof AuthenticatedSettingsIndexLazyRoute
  '/landing/customer-chats': typeof LandingCustomerChatsIndexLazyRoute
  '/landing/customer-orders': typeof LandingCustomerOrdersIndexLazyRoute
  '/landing/reviews': typeof LandingReviewsIndexLazyRoute
  '/products/$slug/edit': typeof AuthenticatedProductsSlugEditLazyRoute
  '/transactions/processing-orders': typeof AuthenticatedTransactionsProcessingOrdersIndexRoute
  '/transactions/list-order': typeof AuthenticatedTransactionsListOrderIndexLazyRoute
  '/transactions/list-payment': typeof AuthenticatedTransactionsListPaymentIndexLazyRoute
  '/transactions/orders': typeof AuthenticatedTransactionsOrdersIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/(auth)/500': typeof auth500Route
  '/(auth)/login-customer': typeof authLoginCustomerRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/register-customer': typeof authRegisterCustomerRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  '/(auth)/change-password': typeof authChangePasswordLazyRoute
  '/(auth)/forgot-password': typeof authForgotPasswordLazyRoute
  '/(auth)/profile': typeof authProfileLazyRoute
  '/(auth)/sign-up': typeof authSignUpLazyRoute
  '/(errors)/401': typeof errors401LazyRoute
  '/(errors)/403': typeof errors403LazyRoute
  '/(errors)/404': typeof errors404LazyRoute
  '/(errors)/500': typeof errors500LazyRoute
  '/(errors)/503': typeof errors503LazyRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/landing/': typeof LandingIndexRoute
  '/_authenticated/products/create': typeof AuthenticatedProductsCreateLazyRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/_authenticated/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/_authenticated/users/customer': typeof AuthenticatedUsersCustomerLazyRoute
  '/_authenticated/users/staff': typeof AuthenticatedUsersStaffLazyRoute
  '/landing/customer-orders/$orderId': typeof LandingCustomerOrdersOrderIdLazyRoute
  '/landing/customer/profile': typeof LandingCustomerProfileLazyRoute
  '/landing/catalog/': typeof LandingCatalogIndexRoute
  '/_authenticated/category/': typeof AuthenticatedCategoryIndexLazyRoute
  '/_authenticated/chats/': typeof AuthenticatedChatsIndexLazyRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/_authenticated/products/': typeof AuthenticatedProductsIndexLazyRoute
  '/_authenticated/reviews/': typeof AuthenticatedReviewsIndexLazyRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexLazyRoute
  '/landing/customer-chats/': typeof LandingCustomerChatsIndexLazyRoute
  '/landing/customer-orders/': typeof LandingCustomerOrdersIndexLazyRoute
  '/landing/reviews/': typeof LandingReviewsIndexLazyRoute
  '/_authenticated/products/$slug/edit': typeof AuthenticatedProductsSlugEditLazyRoute
  '/_authenticated/transactions/processing-orders/': typeof AuthenticatedTransactionsProcessingOrdersIndexRoute
  '/_authenticated/transactions/list-order/': typeof AuthenticatedTransactionsListOrderIndexLazyRoute
  '/_authenticated/transactions/list-payment/': typeof AuthenticatedTransactionsListPaymentIndexLazyRoute
  '/_authenticated/transactions/orders/': typeof AuthenticatedTransactionsOrdersIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/500'
    | '/login-customer'
    | '/otp'
    | '/register-customer'
    | '/sign-in'
    | '/settings'
    | '/change-password'
    | '/forgot-password'
    | '/profile'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/'
    | '/landing'
    | '/products/create'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/users/customer'
    | '/users/staff'
    | '/landing/customer-orders/$orderId'
    | '/landing/customer/profile'
    | '/landing/catalog'
    | '/category'
    | '/chats'
    | '/help-center'
    | '/products'
    | '/reviews'
    | '/settings/'
    | '/landing/customer-chats'
    | '/landing/customer-orders'
    | '/landing/reviews'
    | '/products/$slug/edit'
    | '/transactions/processing-orders'
    | '/transactions/list-order'
    | '/transactions/list-payment'
    | '/transactions/orders'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/500'
    | '/login-customer'
    | '/otp'
    | '/register-customer'
    | '/sign-in'
    | '/change-password'
    | '/forgot-password'
    | '/profile'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/'
    | '/landing'
    | '/products/create'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/users/customer'
    | '/users/staff'
    | '/landing/customer-orders/$orderId'
    | '/landing/customer/profile'
    | '/landing/catalog'
    | '/category'
    | '/chats'
    | '/help-center'
    | '/products'
    | '/reviews'
    | '/settings'
    | '/landing/customer-chats'
    | '/landing/customer-orders'
    | '/landing/reviews'
    | '/products/$slug/edit'
    | '/transactions/processing-orders'
    | '/transactions/list-order'
    | '/transactions/list-payment'
    | '/transactions/orders'
  id:
    | '__root__'
    | '/_authenticated'
    | '/(auth)/500'
    | '/(auth)/login-customer'
    | '/(auth)/otp'
    | '/(auth)/register-customer'
    | '/(auth)/sign-in'
    | '/_authenticated/settings'
    | '/(auth)/change-password'
    | '/(auth)/forgot-password'
    | '/(auth)/profile'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/landing/'
    | '/_authenticated/products/create'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/settings/display'
    | '/_authenticated/settings/notifications'
    | '/_authenticated/users/customer'
    | '/_authenticated/users/staff'
    | '/landing/customer-orders/$orderId'
    | '/landing/customer/profile'
    | '/landing/catalog/'
    | '/_authenticated/category/'
    | '/_authenticated/chats/'
    | '/_authenticated/help-center/'
    | '/_authenticated/products/'
    | '/_authenticated/reviews/'
    | '/_authenticated/settings/'
    | '/landing/customer-chats/'
    | '/landing/customer-orders/'
    | '/landing/reviews/'
    | '/_authenticated/products/$slug/edit'
    | '/_authenticated/transactions/processing-orders/'
    | '/_authenticated/transactions/list-order/'
    | '/_authenticated/transactions/list-payment/'
    | '/_authenticated/transactions/orders/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  auth500Route: typeof auth500Route
  authLoginCustomerRoute: typeof authLoginCustomerRoute
  authOtpRoute: typeof authOtpRoute
  authRegisterCustomerRoute: typeof authRegisterCustomerRoute
  authSignInRoute: typeof authSignInRoute
  authChangePasswordLazyRoute: typeof authChangePasswordLazyRoute
  authForgotPasswordLazyRoute: typeof authForgotPasswordLazyRoute
  authProfileLazyRoute: typeof authProfileLazyRoute
  authSignUpLazyRoute: typeof authSignUpLazyRoute
  errors401LazyRoute: typeof errors401LazyRoute
  errors403LazyRoute: typeof errors403LazyRoute
  errors404LazyRoute: typeof errors404LazyRoute
  errors500LazyRoute: typeof errors500LazyRoute
  errors503LazyRoute: typeof errors503LazyRoute
  LandingIndexRoute: typeof LandingIndexRoute
  LandingCustomerOrdersOrderIdLazyRoute: typeof LandingCustomerOrdersOrderIdLazyRoute
  LandingCustomerProfileLazyRoute: typeof LandingCustomerProfileLazyRoute
  LandingCatalogIndexRoute: typeof LandingCatalogIndexRoute
  LandingCustomerChatsIndexLazyRoute: typeof LandingCustomerChatsIndexLazyRoute
  LandingCustomerOrdersIndexLazyRoute: typeof LandingCustomerOrdersIndexLazyRoute
  LandingReviewsIndexLazyRoute: typeof LandingReviewsIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  auth500Route: auth500Route,
  authLoginCustomerRoute: authLoginCustomerRoute,
  authOtpRoute: authOtpRoute,
  authRegisterCustomerRoute: authRegisterCustomerRoute,
  authSignInRoute: authSignInRoute,
  authChangePasswordLazyRoute: authChangePasswordLazyRoute,
  authForgotPasswordLazyRoute: authForgotPasswordLazyRoute,
  authProfileLazyRoute: authProfileLazyRoute,
  authSignUpLazyRoute: authSignUpLazyRoute,
  errors401LazyRoute: errors401LazyRoute,
  errors403LazyRoute: errors403LazyRoute,
  errors404LazyRoute: errors404LazyRoute,
  errors500LazyRoute: errors500LazyRoute,
  errors503LazyRoute: errors503LazyRoute,
  LandingIndexRoute: LandingIndexRoute,
  LandingCustomerOrdersOrderIdLazyRoute: LandingCustomerOrdersOrderIdLazyRoute,
  LandingCustomerProfileLazyRoute: LandingCustomerProfileLazyRoute,
  LandingCatalogIndexRoute: LandingCatalogIndexRoute,
  LandingCustomerChatsIndexLazyRoute: LandingCustomerChatsIndexLazyRoute,
  LandingCustomerOrdersIndexLazyRoute: LandingCustomerOrdersIndexLazyRoute,
  LandingReviewsIndexLazyRoute: LandingReviewsIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/(auth)/500",
        "/(auth)/login-customer",
        "/(auth)/otp",
        "/(auth)/register-customer",
        "/(auth)/sign-in",
        "/(auth)/change-password",
        "/(auth)/forgot-password",
        "/(auth)/profile",
        "/(auth)/sign-up",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503",
        "/landing/",
        "/landing/customer-orders/$orderId",
        "/landing/customer/profile",
        "/landing/catalog/",
        "/landing/customer-chats/",
        "/landing/customer-orders/",
        "/landing/reviews/"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/settings",
        "/_authenticated/",
        "/_authenticated/products/create",
        "/_authenticated/users/customer",
        "/_authenticated/users/staff",
        "/_authenticated/category/",
        "/_authenticated/chats/",
        "/_authenticated/help-center/",
        "/_authenticated/products/",
        "/_authenticated/reviews/",
        "/_authenticated/products/$slug/edit",
        "/_authenticated/transactions/processing-orders/",
        "/_authenticated/transactions/list-order/",
        "/_authenticated/transactions/list-payment/",
        "/_authenticated/transactions/orders/"
      ]
    },
    "/(auth)/500": {
      "filePath": "(auth)/500.tsx"
    },
    "/(auth)/login-customer": {
      "filePath": "(auth)/login-customer.tsx"
    },
    "/(auth)/otp": {
      "filePath": "(auth)/otp.tsx"
    },
    "/(auth)/register-customer": {
      "filePath": "(auth)/register-customer.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings/route.lazy.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/settings/account",
        "/_authenticated/settings/appearance",
        "/_authenticated/settings/display",
        "/_authenticated/settings/notifications",
        "/_authenticated/settings/"
      ]
    },
    "/(auth)/change-password": {
      "filePath": "(auth)/change-password.lazy.tsx"
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.lazy.tsx"
    },
    "/(auth)/profile": {
      "filePath": "(auth)/profile.lazy.tsx"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.lazy.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.lazy.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.lazy.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.lazy.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.lazy.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.lazy.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/landing/": {
      "filePath": "landing/index.tsx"
    },
    "/_authenticated/products/create": {
      "filePath": "_authenticated/products/create.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/account": {
      "filePath": "_authenticated/settings/account.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/appearance": {
      "filePath": "_authenticated/settings/appearance.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/display": {
      "filePath": "_authenticated/settings/display.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/notifications": {
      "filePath": "_authenticated/settings/notifications.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/users/customer": {
      "filePath": "_authenticated/users/customer.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/users/staff": {
      "filePath": "_authenticated/users/staff.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/landing/customer-orders/$orderId": {
      "filePath": "landing/customer-orders/$orderId.lazy.tsx"
    },
    "/landing/customer/profile": {
      "filePath": "landing/customer/profile.lazy.tsx"
    },
    "/landing/catalog/": {
      "filePath": "landing/catalog/index.tsx"
    },
    "/_authenticated/category/": {
      "filePath": "_authenticated/category/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/chats/": {
      "filePath": "_authenticated/chats/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/help-center/": {
      "filePath": "_authenticated/help-center/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/products/": {
      "filePath": "_authenticated/products/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/reviews/": {
      "filePath": "_authenticated/reviews/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings/index.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/landing/customer-chats/": {
      "filePath": "landing/customer-chats/index.lazy.tsx"
    },
    "/landing/customer-orders/": {
      "filePath": "landing/customer-orders/index.lazy.tsx"
    },
    "/landing/reviews/": {
      "filePath": "landing/reviews/index.lazy.tsx"
    },
    "/_authenticated/products/$slug/edit": {
      "filePath": "_authenticated/products/$slug.edit.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/transactions/processing-orders/": {
      "filePath": "_authenticated/transactions/processing-orders/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/transactions/list-order/": {
      "filePath": "_authenticated/transactions/list-order/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/transactions/list-payment/": {
      "filePath": "_authenticated/transactions/list-payment/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/transactions/orders/": {
      "filePath": "_authenticated/transactions/orders/index.lazy.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
